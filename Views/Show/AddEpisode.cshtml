@model JS2247A5.Models.EpisodeAddFormViewModel

@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div>
        @if (Model != null)
        {
            <h2>Add new episode to @Model.ShowName</h2>
        }
        <hr />
        @Html.HiddenFor(model => model.ShowId)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row mb-3">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            @Html.LabelFor(model => model.SeasonNumber, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.SeasonNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SeasonNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            @Html.LabelFor(model => model.EpisodeNumber, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.EpisodeNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EpisodeNumber, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="row mb-3">
            @Html.LabelFor(model => model.AirDate, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.AirDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AirDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            @Html.LabelFor(model => model.GenreId, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                <div class="col-md-10">
                </div>
                @Html.ValidationMessageFor(model => model.GenreId, "", new { @class = "text-danger" })
                @Html.DropDownList("GenreId", Model.GenreList, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Premise, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Premise, new { htmlAttributes = new { @class = "form-control", @rows = 8 } })
                @Html.ValidationMessageFor(model => model.Premise, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VideoUpload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VideoUpload, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VideoUpload, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            <div class="col">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="//cdn.ckeditor.com/4.6.2/standard/ckeditor.js"></script>
    <script>CKEDITOR.replace('Premise', { startupFocus: true });</script>
}
